# -*- coding: utf-8 -*-
"""CodeAlong8_Matplotlib.ipynb

Automatically generated by Colab.

"""

# https://matplotlib.org/stable/users/index.html
# https://matplotlib.org/stable/users/project/history.html

import matplotlib.pyplot as plt

import numpy as np

a=np.arange(0,8)
a

b=3*a
b

plt.plot(a,b)

plt.plot(a,b)
# plt.plot(a,b);
# plt.show()

plt.plot(a,b)
# How to label
plt.xlabel('A values in X Axis')
plt.ylabel('B values in Y Axis')
plt.title('A vs B Values')

plt.show()

plt.plot(a,b)
# How to label
plt.xlabel('A values in X Axis')
plt.ylabel('B values in Y Axis')
plt.title('A vs B Values')

# setting zoom
# set limits
plt.xlim(0,5)
plt.ylim(0,10)

plt.show()

pwd

plt.plot(a,b)
# How to label
plt.xlabel('A values in X Axis')
plt.ylabel('B values in Y Axis')
plt.title('A vs B Values')

# setting zoom
# set limits
plt.xlim(0,5)
plt.ylim(0,10)

# saving
plt.savefig('abvalues.png')

plt.show()

# figure object
plt.figure()

fig=plt.figure()
my_axes=fig.add_axes([0,0,1,1])

fig=plt.figure()
my_axes=fig.add_axes([0,0,0.5,1])

fig=plt.figure()
my_axes=fig.add_axes([0,0,1,0.5]) # cut from height

year=np.linspace(0,7,8)
year

sales=year**3
sales

my_figure=plt.figure()

growth_axes=my_figure.add_axes([0,0,1,1])
growth_axes.plot(year,sales) #year x axis, sales y axis

plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis



# small size
growth_axes_s=my_figure.add_axes([0.2,0.2,0.5,0.5])
growth_axes_s.plot(year,sales) #year x axis, sales y axis
plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis



# small size
growth_axes_s=my_figure.add_axes([0.9,0.9,0.1,0.1])
growth_axes_s.plot(year,sales) #year x axis, sales y axis
plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis


# puts in middle 1st one pushes on x axis, 2nd one pushes on y axis
# small size
growth_axes_s=my_figure.add_axes([0.5,0.5,0.1,0.1])
growth_axes_s.plot(year,sales) #year x axis, sales y axis
plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis

# top right corner
# small size
growth_axes_s=my_figure.add_axes([1,1,0.1,0.1])
growth_axes_s.plot(year,sales) #year x axis, sales y axis
plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis

growth_axes_f.set_xlabel('YEARS')
growth_axes_f.set_ylabel('SALES')
#growth_axes_f.set_xlim(0,5)
#growth_axes_f.set_ylim(0,150)
growth_axes_f.set_title('GROWTH')





# small size
growth_axes_s=my_figure.add_axes([0.2,0.5,0.3,0.3])
growth_axes_s.plot(year,sales) #year x axis, sales y axis

growth_axes_s.set_xlabel('years')
growth_axes_s.set_ylabel('sales')
growth_axes_s.set_xlim(0,5)
growth_axes_s.set_ylim(0,150)
growth_axes_s.set_title('growth')

plt.show()

my_figure=plt.figure()

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis

growth_axes_f.set_xlabel('YEARS')
growth_axes_f.set_ylabel('SALES')
#growth_axes_f.set_xlim(0,5)
#growth_axes_f.set_ylim(0,150)
growth_axes_f.set_title('GROWTH')




# small size
growth_axes_s=my_figure.add_axes([0.2,0.5,0.3,0.3])
growth_axes_s.plot(year,sales) #year x axis, sales y axis

growth_axes_s.set_xlabel('years')
growth_axes_s.set_ylabel('sales')
growth_axes_s.set_xlim(0,5)
growth_axes_s.set_ylim(0,150)
growth_axes_s.set_title('growth')

plt.show()

# dpi : dot pixels per inch
my_figure=plt.figure(figsize=(7,7),dpi=300)

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis

growth_axes_f.set_xlabel('YEARS')
growth_axes_f.set_ylabel('SALES')
#growth_axes_f.set_xlim(0,5)
#growth_axes_f.set_ylim(0,150)
growth_axes_f.set_title('GROWTH')




# small size
growth_axes_s=my_figure.add_axes([0.2,0.5,0.3,0.3])
growth_axes_s.plot(year,sales) #year x axis, sales y axis

growth_axes_s.set_xlabel('years')
growth_axes_s.set_ylabel('sales')
growth_axes_s.set_xlim(0,5)
growth_axes_s.set_ylim(0,150)
growth_axes_s.set_title('growth')

plt.show()

# dpi : dot pixels per inch
my_figure=plt.figure(figsize=(3,3),dpi=500)

# full size
growth_axes_f=my_figure.add_axes([0,0,1,1])
growth_axes_f.plot(year,sales) #year x axis, sales y axis

growth_axes_f.set_xlabel('YEARS')
growth_axes_f.set_ylabel('SALES')
#growth_axes_f.set_xlim(0,5)
#growth_axes_f.set_ylim(0,150)
growth_axes_f.set_title('GROWTH')




# small size
growth_axes_s=my_figure.add_axes([0.2,0.5,0.3,0.3])
growth_axes_s.plot(year,sales) #year x axis, sales y axis

growth_axes_s.set_xlabel('years')
growth_axes_s.set_ylabel('sales')
growth_axes_s.set_xlim(0,5)
growth_axes_s.set_ylim(0,150)
growth_axes_s.set_title('growth')

plt.show()

# LEGENDS AND LABELS
values=np.linspace(0,7,8)
values

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values);

# add labels and legend

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values, label='Values vs Values');
my_axes.plot(values,values**3, label='Values vs Values**3');

my_axes.legend()
plt.show()

# play with location of legend

# add labels and legend

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values, label='Values vs Values');
my_axes.plot(values,values**3, label='Values vs Values**3');

my_axes.legend(loc=(0.3,0.5))
plt.show()

# play with location of legend

# add labels and legend

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values, label='Values vs Values');
my_axes.plot(values,values**3, label='Values vs Values**3');

my_axes.legend(loc=('best'))
plt.show()

# center left
# play with location of legend

# add labels and legend

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values, label='Values vs Values');
my_axes.plot(values,values**3, label='Values vs Values**3');

#my_axes.legend(loc=('center'))
my_axes.legend(loc=(6))

plt.show()

# play w color
# play with location of legend

# add labels and legend

my_fig=plt.figure()

my_axes=my_fig.add_axes([0,0,1,1])
my_axes.plot(values,values, label='Values vs Values', color='green');
my_axes.plot(values,values**3, label='Values vs Values**3', color='#21d9ab');

#my_axes.legend(loc=('center'))
my_axes.legend(loc=('best'))

plt.show()